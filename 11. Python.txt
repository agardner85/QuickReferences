print('i am working')

def myFunction():
    print('this is a new function')
    print(': will star the function after defiening the function name')
    print('the functions will execute what ever is directly below the function name and indented')
    print('when you stop indenting the code, the function will know to end its self')

myFunction()





def myFunction2(str1, str2):
   print(str1)
   print(str2)

myFunction2('hello','my name is Andrew')
myFunction2('This is a','python function with perams')


# ------------
# ------------
# ------------



def myNameAge(name, age):
   print('Hello my name is '+name+' and i am '+str(age)+' years old')

myNameAge('Bob', 43)


def myNameAge2(name, age):
   print('Hello my name is',name,'and i am',age,'years old')

myNameAge2('John', 18)


def myNameAge3(name='Person', age='Number'):
   print('Hello my name is',name,'and i am',age,'years old')

myNameAge3()


# the arguemnst dont need to be in order if you define them when you pass them through manualy
def myNameAge4(age='33',name='Dan'):
   print('Hello my name is',name,'and i am',age,'years old')

myNameAge4('Jane')


def myNameAge4(name='Person', age='Number'):
   print('Hello my name is',name,'and i am',age,'years old')

myNameAge4('Jane')


def myNameAge5(name, age):
   print('Hello my name is',name,'and i am',age,'years old')

myNameAge5(None, 45)


# ------------
# ------------
# ------------


# how to put in an infanante number of values in the functions ussing an array
def myarray(*people):
   for person in people:
       print('This person name is,',person)

myarray('Jack','Jill','Bob','Bill','Dan','John')


# ------------
# ------------
# ------------




def doMath(num1, num2):
   return num1 + num2

mathEq = doMath(37, 45)
mathEq2 = doMath(57, 124)

print(mathEq)
print(mathEq2)
print('Num1 =',mathEq,'and num2 number =',mathEq2)




# ------------
# - If statment
# ------------

name = 'Jane'
if name == 'Andrew':
    print('You are the owner',name)
elif name == 'Bob':  # else if
    print('You MIGHT be the owner', name)
else:
    print('You are NOT the owner')



# ------------
# - Loops
# ------------


# for loop
setNumbers = [23,34,67,87,12]
for item in setNumbers:
    print(item)


setPeople = ['Andrew','John','James','Bill','Bob']
for item in setPeople:
    print(item)


# while loop
run = True
currentNum = 1

while run:
    if currentNum == 25:
        run = False
    else:
        print(currentNum)
        currentNum += 1



# ------------
# - import a moudles
# ------------

# in terminal you need to import a resource
#import reg ex
# terminal cmd: python3
# terminal cmd: import re

testString = 'Blarg i am a ZOrmbIe!!'
print(testString)

import re

newTestString = re.sub('[a-z]','',testString)
print(newTestString)




# ------------
# - Basic Math
# ------------

def add(x,y):
    return x+y

def subtract(x,y):
    return x-y

def multiply(x,y):
    return x*y

def divide(x,y):
    return x/y


addTest = add(3,5)
subtractionTest = subtract(3,5)
multiplyTest = multiply(3,5)
divisionTest = divide(3,5)

print(addTest)
print(subtractionTest)
print(multiplyTest)
print(divisionTest)



# ------------
# - calculator script
# ------------

# this works like js ES6 let and const... the var will not allow you to edit it unless you call a variable that is not define with in a function... thus a globasl variable.


print('my first python script')
print('Type "quit" to exit\n')


previous = 0
run = True

def doMath():
    global run # = the run variable that was defined out side this function on the global level
    global previous
    equation = ''

    if previous == 0:
        equation = input('Enter you equations: ')
    else:
        equation = input(str(previous))

    if equation == 'quit':
        print('Calc stoping')
        run = False
    else:
        #previous = eval(equation) # eval is a bad function to use as it will also execute pythong code inside the input and needs to be sanatized.
        equation = re.sub('[a-zA-Z,.:()`" "]','',equation)
        if previous == 0:
            previous = eval(equation)
        else:
            previous = eval(str(previous) + equation)
        print('Yor answer is:',previous)

while run:
    doMath()






